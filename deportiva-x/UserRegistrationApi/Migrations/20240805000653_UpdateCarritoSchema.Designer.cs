// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UserRegistrationApi.Models;

#nullable disable

namespace UserRegistrationApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240805000653_UpdateCarritoSchema")]
    partial class UpdateCarritoSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UserRegistrationApi.Models.Carrito", b =>
                {
                    b.Property<int>("idCarrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarrito"));

                    b.Property<int>("UseridUsuarios")
                        .HasColumnType("int");

                    b.Property<int>("idUsuarios")
                        .HasColumnType("int")
                        .HasColumnName("idUsuarios");

                    b.HasKey("idCarrito");

                    b.HasIndex("UseridUsuarios");

                    b.ToTable("Carrito");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.CarritoItems", b =>
                {
                    b.Property<int>("idCarritoItems")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCarritoItems"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("UseridUsuarios")
                        .HasColumnType("int");

                    b.Property<int>("idCarrito")
                        .HasColumnType("int");

                    b.Property<int>("idProductos")
                        .HasColumnType("int");

                    b.HasKey("idCarritoItems");

                    b.HasIndex("UseridUsuarios");

                    b.HasIndex("idCarrito");

                    b.HasIndex("idProductos");

                    b.ToTable("CarritoItems");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.Product", b =>
                {
                    b.Property<int>("idProductos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idProductos"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TallaDb")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Talla");

                    b.HasKey("idProductos");

                    b.ToTable("productos", (string)null);
                });

            modelBuilder.Entity("UserRegistrationApi.Models.User", b =>
                {
                    b.Property<int>("idUsuarios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idUsuarios"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Domicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Postalcode")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("descuentoInicial")
                        .HasColumnType("tinyint");

                    b.HasKey("idUsuarios");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.UserWishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("idProducto")
                        .HasColumnType("int");

                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idProducto");

                    b.HasIndex("idUsuario");

                    b.ToTable("UserWishlist");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.Carrito", b =>
                {
                    b.HasOne("UserRegistrationApi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UseridUsuarios")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.CarritoItems", b =>
                {
                    b.HasOne("UserRegistrationApi.Models.User", null)
                        .WithMany("CarritoItems")
                        .HasForeignKey("UseridUsuarios");

                    b.HasOne("UserRegistrationApi.Models.Carrito", "Carrito")
                        .WithMany("CarritoItems")
                        .HasForeignKey("idCarrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserRegistrationApi.Models.Product", "Productos")
                        .WithMany("CarritoItems")
                        .HasForeignKey("idProductos")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Carrito");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.UserWishlist", b =>
                {
                    b.HasOne("UserRegistrationApi.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("idProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("UserRegistrationApi.Models.User", "User")
                        .WithMany("Wishlists")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.Carrito", b =>
                {
                    b.Navigation("CarritoItems");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.Product", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("UserRegistrationApi.Models.User", b =>
                {
                    b.Navigation("CarritoItems");

                    b.Navigation("Wishlists");
                });
#pragma warning restore 612, 618
        }
    }
}
